diff -rupN lua/src/Makefile emlua/src/Makefile
--- lua/src/Makefile	2014-03-09 16:37:56.000000000 -0400
+++ lua/src/Makefile	2014-03-09 16:38:54.000000000 -0400
@@ -6,14 +6,17 @@
 # Your platform. See PLATS for possible values.
 PLAT= none
 
-CC= gcc
+# XXX EMSCRIPTEN - comment out several lines here, to pick them up from the environment
+#CC= gcc
 CFLAGS= -O2 -Wall -DLUA_COMPAT_ALL $(SYSCFLAGS) $(MYCFLAGS)
-LDFLAGS= $(SYSLDFLAGS) $(MYLDFLAGS)
+#LDFLAGS= $(SYSLDFLAGS) $(MYLDFLAGS)
 LIBS= -lm $(SYSLIBS) $(MYLIBS)
 
-AR= ar rcu
-RANLIB= ranlib
-RM= rm -f
+ifndef EMSCRIPTEN
+  AR= ar
+  RANLIB= ranlib
+  RM= rm -f
+endif
 
 SYSCFLAGS=
 SYSLDFLAGS=
@@ -24,6 +27,9 @@ MYLDFLAGS=
 MYLIBS=
 MYOBJS=
 
+# XXX EMSCRIPTEN - add this
+AR_ARGS=rcu
+
 # == END OF USER SETTINGS -- NO NEED TO CHANGE ANYTHING BELOW THIS LINE =======
 
 PLATS= aix ansi bsd freebsd generic linux macosx mingw posix solaris
@@ -42,8 +48,16 @@ LUA_O=	lua.o
 LUAC_T=	luac
 LUAC_O=	luac.o
 
-ALL_O= $(BASE_O) $(LUA_O) $(LUAC_O)
-ALL_T= $(LUA_A) $(LUA_T) $(LUAC_T)
+ifdef EMSCRIPTEN
+  EMLUA_SHELL_T = emlua_shell.js
+  EMLUA_SHELL_ARGS = -O2 -s EXPORTED_FUNCTIONS="['_main', '_lua_execute']" -s TOTAL_MEMORY=134217728
+else
+  EMLUA_SHELL_T = emlua_shell
+endif
+EMLUA_SHELL_O = emlua_shell.o
+
+ALL_O= $(BASE_O) $(LUA_O) $(LUAC_O) $(EMLUA_SHELL_O)
+ALL_T= $(LUA_A) $(LUA_T) $(LUAC_T) $(EMLUA_SHELL_T)
 ALL_A= $(LUA_A)
 
 # Targets start here.
@@ -56,7 +70,7 @@ o:	$(ALL_O)
 a:	$(ALL_A)
 
 $(LUA_A): $(BASE_O)
-	$(AR) $@ $(BASE_O)
+	$(AR) $(AR_ARGS) $@ $(BASE_O) # XXX EMSCRIPTEN: add AR_ARGS
 	$(RANLIB) $@
 
 $(LUA_T): $(LUA_O) $(LUA_A)
@@ -65,6 +79,9 @@ $(LUA_T): $(LUA_O) $(LUA_A)
 $(LUAC_T): $(LUAC_O) $(LUA_A)
 	$(CC) -o $@ $(LDFLAGS) $(LUAC_O) $(LUA_A) $(LIBS)
 
+$(EMLUA_SHELL_T): $(EMLUA_SHELL_O) $(LUA_A)
+	$(CC) -o $@ $(LDFLAGS) $(EMLUA_SHELL_O) $(LUA_A) $(LIBS) $(EMLUA_SHELL_ARGS)
+
 clean:
 	$(RM) $(ALL_T) $(ALL_O)
 
@@ -106,7 +123,7 @@ linux:
 	$(MAKE) $(ALL) SYSCFLAGS="-DLUA_USE_LINUX" SYSLIBS="-Wl,-E -ldl -lreadline"
 
 macosx:
-	$(MAKE) $(ALL) SYSCFLAGS="-DLUA_USE_MACOSX" SYSLIBS="-lreadline" CC=cc
+	$(MAKE) $(ALL) SYSCFLAGS="-DLUA_USE_MACOSX" SYSLIBS="-lreadline"
 
 mingw:
 	$(MAKE) "LUA_A=lua52.dll" "LUA_T=lua.exe" \
diff -rupN lua/src/emlua_shell.c emlua/src/emlua_shell.c
--- lua/src/emlua_shell.c	1969-12-31 19:00:00.000000000 -0500
+++ lua/src/emlua_shell.c	2014-03-09 16:38:43.000000000 -0400
@@ -0,0 +1,40 @@
+
+#include <signal.h>
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+
+#define lua_c
+
+#include "lua.h"
+#include "lauxlib.h"
+#include "lualib.h"
+
+#if EMSCRIPTEN
+#include <emscripten.h>
+#endif
+
+lua_State *L = NULL;
+
+void lua_execute(char *str) {
+  luaL_loadbuffer(L, str, strlen(str), "input");
+  if (lua_pcall(L, 0, 0, 0)) {
+    printf("ERROR: %s\n", lua_tostring(L, -1));
+  };
+}
+
+int main (int argc, char **argv) {
+  L = luaL_newstate();  /* create state */
+  lua_gc(L, LUA_GCSTOP, 0);  /* stop collector during initialization */
+  luaL_openlibs(L);  /* open libraries */
+  lua_gc(L, LUA_GCRESTART, 0);
+
+#if EMSCRIPTEN
+  emscripten_exit_with_live_runtime();
+#else
+  lua_execute("print('hello world')");
+#endif
+
+  return 0;
+}
+
